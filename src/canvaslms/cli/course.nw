\chapter{The \texttt{course} command}

This chapter provides the subcommand [[course]], which lists data about a 
specific course or courses.

We outline the module:
<<course.py>>=
from canvaslms.cli.courses import filter_courses
import re

<<functions>>

def add_command_options(subp):
  """Adds course command and options to argparse parser subp"""
  course_parser = subp.add_parser("course", help="Lists data about a course")
  course_parser.set_defaults(func=course_command)
  <<set up options for selecting a course>>
@

Now, that [[course_command]] function must take three arguments: [[config]], 
[[canvas]] and [[args]].
<<functions>>=
def course_command(config, canvas, args):
  <<process options for selecting a course>>
  for course in course_list:
    <<print course data>>
@ We will cover the set up and processing of the options in the following 
sections.


\section{Selecting the course}%
\label{selecting-courses}

We provide two ways to identify a course: by Canvas' ID number, which is 
unique, or by matching the course name and course code against a regular 
expression.
We need a course, so we require one of these options, but not both.
<<set up options for selecting a course>>=
course_args = course_parser.add_mutually_exclusive_group(required=True)
course_args.add_argument("-i", "--course-identifier", type=int,
  help="Select course by Canvas unique identifier")
course_args.add_argument("-c", "--course-regex",
  help="Filter courses by regular expression")
@

When we check for either of these arguments, we set up the [[course_list]] 
object for the for loop above.
<<process options for selecting a course>>=
if args.course_identifier:
  course_list = [canvas.get_course(args.course_identifier)]
elif args.course_regex:
  course_list = filter_courses(canvas, args.course_regex)
@ We use the [[filter_courses]] from \cref{filter-courses}.


\section{Print the course data}

We have the course data in a [[course]] object.
Now we just print the interesting data about it.
<<print course data>>=
print(f"ID: {course.id}")
print(f"Code: {course.course_code}")
print(f"Name: {course.name}")
print(f"Start: {course.start_at}")
print(f"End: {course.end_at}")
@

